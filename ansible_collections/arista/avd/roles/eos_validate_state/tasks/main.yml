# Copyright (c) 2023 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
---
- name: Verify Requirements
  tags: [always, avd_req]
  delegate_to: localhost
  when: avd_requirements is not defined
  arista.avd.verify_requirements:
    requirements: "{{ lookup('file', requirements_path ~ '/requirements.txt').splitlines() }}"
    avd_ignore_requirements: "{{ avd_ignore_requirements | default(false) }}"
  vars:
    requirements_path: "{{ (role_path | split('/'))[0:-2] | join('/') }}"
  run_once: true
  register: avd_requirements

- name: Create required output directories if not present
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  loop:
    - "{{ eos_validate_state_dir }}"
  delegate_to: localhost
  run_once: true
  tags:
    - always

- name: Include device intended structure configuration variables
  ansible.builtin.include_vars: "{{ filename }}"
  delegate_to: localhost
  when: structured_config is not defined and lookup('first_found', filename, skip=True, errors='ignore')
  vars:
    filename: "{{ structured_dir }}/{{ inventory_hostname }}.{{ avd_structured_config_file_format }}"
  tags:
    - always

- name: Generate variables for testing
  ansible.builtin.template:
    src: generate_vars_for_testing.j2
    dest: "{{ eos_validate_state_dir }}/validate_state_vars.yml"
    mode: 0664
  delegate_to: localhost
  run_once: true
  tags:
    - always

- name: Include vars from validate_state_vars.yml
  ansible.builtin.include_vars:
    file: "{{ eos_validate_state_dir }}/validate_state_vars.yml"
  delegate_to: localhost
  run_once: true
  tags:
    - always

- name: Gather EOS platform and version details
  arista.eos.eos_command:
    commands: "show version | json"
  register: eos_version
  tags:
    - platform_information
    - hardware

- name: Display device platform and release information
  delegate_to: localhost
  ansible.builtin.debug:
    msg: "The device {{ inventory_hostname }} is a {{ eos_version.stdout_lines.0.modelName }} model running EOS version {{ eos_version.stdout_lines.0.version }}"
  tags:
    - platform_information
    - hardware

  #####################################
  ## Load tasks for validation tests ##
  #####################################

- name: Load Hardware validation tasks
  ansible.builtin.include_tasks: "hardware.yml"
  when:
    - eos_version.stdout_lines.0.modelName != 'vEOS'
    - eos_version.stdout_lines.0.modelName != 'vEOS-lab'
    - eos_version.stdout_lines.0.modelName != 'cEOSLab'
  tags:
    - hardware

- name: Load ntp tasks
  ansible.builtin.include_tasks: "ntp.yml"
  tags:
    - ntp

- name: Load interface state tasks
  ansible.builtin.include_tasks: "interface_state.yml"
  tags:
    - interfaces_state

- name: Load LLDP Topology tasks when dns domain is defined
  ansible.builtin.include_tasks: "lldp_topology_fqdn.yml"
  tags:
    - lldp_topology
  when: dns_domain is defined

- name: Load LLDP Topology tasks when dns domain is not defined
  ansible.builtin.include_tasks: "lldp_topology_no_fqdn.yml"
  tags:
    - lldp_topology
  when: dns_domain is not defined

- name: Load mlag tasks
  ansible.builtin.include_tasks: "mlag.yml"
  when: |
    (mlag_configuration is defined and mlag_configuration is not none)
  tags:
    - mlag

- name: Load IP Reachability tasks
  ansible.builtin.include_tasks: "ip_reachability.yml"
  tags:
    - ip_reachability

- name: Load BGP tasks
  ansible.builtin.include_tasks: "bgp_check.yml"
  when: |
    (router_bgp is defined and router_bgp is not none)
  tags:
    - bgp_check

- name: Validate reload cause
  ansible.builtin.include_tasks: "reload_cause.yml"
  tags:
    - reload_cause
    - optional
    - never

- name: Validate routing table
  ansible.builtin.include_tasks: "routing_table.yml"
  tags:
    - routing_table

- name: Validate loopback reachability
  ansible.builtin.include_tasks: "loopback_reachability.yml"
  tags:
    - loopback_reachability

- name: Remove generated vars for testing
  ansible.builtin.file:
    path: "{{ eos_validate_state_dir }}/validate_state_vars.yml"
    state: absent
  delegate_to: localhost
  run_once: true
  tags:
    - always

  ####################################
  ##       Validation Reports       ##
  ####################################

- name: Create reports
  ansible.builtin.include_tasks: "reports.yml"
  tags:
    - always
    - reports
